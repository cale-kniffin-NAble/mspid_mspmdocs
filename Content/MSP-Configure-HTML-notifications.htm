<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="6" MadCap:lastHeight="2129" MadCap:lastWidth="1448" MadCap:conditions="Default.comment">
    <head>
        <link href="Resources/Stylesheets/SWI_CustomStyles.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <h1>Customize your notifications </h1>
        <p>When customizing your notifications, the variable type determines how that variable is used in the template. Use the Notification Model to identify each variable within the template, and understand how it should be used. </p>
        <p>Here are some resources to help refresh your HTML knowledge:</p>
        <ul>
            <li>Read <a href="https://shopify.github.io/liquid/">this article</a> to learn more about the Liquid template language <MadCap:variable name="PDFVariables.ProductName" /> uses for HTML notifications. <br /></li>
            <li>Read <a href="https://www.w3schools.com/css/">this article</a> for a tutorial on cascading style sheets. </li>
        </ul>
        <p>Click <img src="Resources/Images/MSPMScreenshots/Expand HTML data model.png" /> at the top right corner of the Notification Template Editor to open the Notification Model and view information about each variable in the template. </p>
        <p>
            <img src="Resources/Images/MSPMScreenshots/HTML Variable Data Model.png" style="border-left-style: solid;border-left-width: 1px;border-left-color: #000000;border-right-style: solid;border-right-width: 1px;border-right-color: #000000;border-top-style: solid;border-top-width: 1px;border-top-color: #000000;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #000000;width: 376px;height: 442px;" />
        </p>
        <h3>String and Null variables </h3>
        <p>
            <img src="Resources/Images/MSPManagerIcons/pastedImage3.png" style="border-left-style: solid;border-left-width: 1px;border-left-color: #000000;border-right-style: solid;border-right-width: 1px;border-right-color: #000000;border-top-style: solid;border-top-width: 1px;border-top-color: #000000;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #000000;" />
        </p>
        <p>For Int32 or String variables, use them by specifying @Model.VariableName.</p>
        <p>Null variables are wrapped in Nullable&lt;SomeType&gt;. For instance, Int32 can not be blank, but Nullable&lt;int32&gt; can.</p>
        <p>String fields can also be null. Make sure to fill in the variable or the corresponding field in the notification will be blank. </p>
        <h3>Nested Variables</h3>
        <p>
            <img src="Resources/Images/MSPManagerIcons/pastedImage.png" style="border-left-style: solid;border-left-width: 1px;border-left-color: #000000;border-right-style: solid;border-right-width: 1px;border-right-color: #000000;border-top-style: solid;border-top-width: 1px;border-top-color: #000000;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #000000;" />
        </p>
        <p>Some variables are nested, and you can expand and collapse them in the model view. Access these variables through their path - @Model.SourceEmailData.Body.</p>
        <p>In this example, SourceEmailData should be Null:</p>
        <p>@if(Model.SourceEmailData != null)</p>
        <p>{</p>
        <p>... @Model.SourceEmailData .FromDisplay...</p>
        <p>... @Model.SourceEmailData .FromEmail...</p>
        <p>... @Model.SourceEmailData .Subject...</p>
        <p>... @Model.SourceEmailData .Body...</p>
        <p>} else</p>
        <p>{</p>
        <p>none</p>
        <p>}</p>
        <h3>Array variables</h3>
        <p>
            <img src="Resources/Images/MSPManagerIcons/pastedImage1.png" style="border-left-style: solid;border-left-width: 1px;border-left-color: #000000;border-right-style: solid;border-right-width: 1px;border-right-color: #000000;border-top-style: solid;border-top-width: 1px;border-top-color: #000000;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #000000;" />
        </p>
        <p>Array variables are marked with []. For instance, there are multiple CustomerExpiryData variables inside @Model.CustomerExpiryList. Use this example to access those variable types:</p>
        <p>foreach(var customerExpiryData in Model.CustomerExpiryList)</p>
        <p>{</p>
        <p>... @customerExpiryData.CustomerName ...</p>
        <p>}</p>
        <h3>Date and time variables</h3>
        <p>
            <img src="Resources/Images/MSPManagerIcons/pastedinage4.png" style="border-left-style: solid;border-left-width: 1px;border-left-color: #000000;border-right-style: solid;border-right-width: 1px;border-right-color: #000000;border-top-style: solid;border-top-width: 1px;border-top-color: #000000;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #000000;" />
        </p>
        <p>Make sure to check the values since the variable is nullable, then use it as follows:</p>
        <p>@Model.TicketDueDate.Value.ToString("d",Model.CompanyCulture)</p>
        <p>Model.CompanyCulture pulls the time and date format from your company culture settings. </p>
        <h3>Sources for ticket requests</h3>
        <p>Unknown = 0,</p>
        <p>Manual = 1,</p>
        <p>Email = 2,</p>
        <p>Portal = 3,</p>
        <p>RMM_N_Central = 4,</p>
        <h3>How To Include Logo/Images</h3>
        <p>Images can be included base64 encoded or URL reference. Preferred mechanism is URL (available in 3.2).</p>
        <p>     Use an online tool (many free available online)</p>
        <p>         Note that users may need to allow images in client</p>
        <p class="warning">CSS  must be embedded in each template, and can not be referenced via an external file. This issue is expected to be addressed in an upcoming release.</p>
    </body>
</html>